===========================DATA EXPLORATION===============================


----------------PERCENT COUNT OF CURRENT BUSINESS OWNERS CHALLENGES------------------

   SELECT 
    COUNT(CASE WHEN IMPACT_OF_LATE_PAYMENT = 'Positively' THEN 1 END) * 100.0 / COUNT(*) AS POSITIVE_EFFECT,
    COUNT(CASE WHEN IMPACT_OF_LATE_PAYMENT = 'Negatively' THEN 1 END) * 100.0 / COUNT(*) AS NEGATIVE_EFFECT
FROM RIS



--------------------BUSINESS AFFECTED BY LATE PAYMENT--------------

 SELECT count(BUSINESS_NAME) Business_Affected,LATE_PAYMENT_RATE                     
   FROM RIS
   WHERE LATE_PAYMENT_RATE = 'Occasionally' OR 
   LATE_PAYMENT_RATE = 'Very frequently' OR 
   LATE_PAYMENT_RATE = 'frequently' or
   LATE_PAYMENT_RATE = 'rarely'
   group by LATE_PAYMENT_RATE



-------------------PERCENTAGE OF OWNERS THAT WOULD USE RIS AND RECOMMEND---------------------------

  SELECT 
    COUNT(CASE WHEN RIS_RECCOMMENDATION = 'Yes' THEN 1 END) * 100.0 / COUNT(*) AS PERCENT_OF_POTENTIAL_USERS,
    COUNT(CASE WHEN Reminder_Integration_System_RIS = 'Yes' THEN 1 END) * 100.0 / COUNT(*) AS Percentage_OF_USERS_TO_RECOMMEND
FROM RIS 



------------------------percentage of current effectiveness of customer's remiders-----------------

SELECT 
    COUNT(CASE WHEN PHYSICAL_VISIT = 'Physical visit' THEN 1 END) * 100.0 / COUNT(*) AS PERCENT_OF_PHYSICAL_VISIT,
    COUNT(CASE WHEN TEXTS = 'Text' THEN 1 END) * 100.0 / COUNT(*) AS PERCENT_OF_TEXT,
	COUNT(CASE WHEN PHONE_CALLS = 'Phone calls' THEN 1 END) * 100.0 / COUNT(*) AS PERCENT_OF_PHONE_CALLS,
	COUNT(CASE WHEN EMAILS = 'Emails' THEN 1 END) * 100.0 / COUNT(*) AS PERCENT_OF_EMAILS
FROM RIS;




----------------------------------PERCENTAGE OF POSSIBLE SUBSCRIBERS AFTER FIRST TRIAL----------------------

  SELECT 
    COUNT(CASE WHEN RIS_SUBSCRIPTION = 'Monthly subscription' THEN 1 END) * 100.0 / COUNT(*) AS PERCENT_OF_MONTHLY_SUBSCRIPTION,
	COUNT(CASE WHEN RIS_SUBSCRIPTION = 'Yearly subscription' THEN 1 END) * 100.0 / COUNT(*) AS PERCENT_OF_YEARLY_SUBSCRIPTION,
	COUNT(CASE WHEN RIS_SUBSCRIPTION = 'Pay-per-use' THEN 1 END) * 100.0 / COUNT(*) AS PERCENT_OF_PAY_PER_USE
FROM RIS


--------------------------------------



--------------------------Most Profitable Companies----------------------

select company, profits
from forbes_global_2010_2014
where profits in ( select top 3 profits
from forbes_global_2010_2014 
order by profits desc
   )
   order by profits desc




---------------------------------Workers With The Highest Salaries-------------------------

select top 2 salary, worker_title
from worker
join title
on worker.worker_id = title.worker_ref_id
order by salary desc



------------------------------------ Ranking Most Active Guests-----------------------------

select dense_rank() over (order by sum(n_messages) desc) as rnk,
id_guest, 
sum(n_messages) as number_of_total_messages
from airbnb_contacts
group by id_guest
order by number_of_total_messages desc




--------------------------------------matching hosts and guests with same gender and nationality-----------------

  select distinct
    host_id,
    guest_id
from airbnb_hosts h
join airbnb_guests g
on h.gender= g.gender
and h.nationality = g.nationality
;




----------------------------------Income By Title and Gender-------------------------------

select a.employee_title, a.sex,
avg(salary + ttl_bonus) as compensation
from sf_employee a join (
select worker_ref_id,
sum(bonus) as ttl_bonus
from sf_bonus
group by worker_ref_id
) b
on a.id = b.worker_ref_id
group by a.employee_title, a.sex



--------------------------------Highest Cost Orders----------------------------

select top 1 first_name, sum(total_order_cost) as total_cost, order_date
from customers
join orders
 on customers.id = orders.cust_id 
 where order_date between '2019-02-01' and '2019-05-01'
 group by first_name, order_date
 order by total_cost desc



------------------------------Largest Olympics-----------------------

select top 1 games, count( distinct id ) as no_of_athletes
from olympics_athletes_events
group by games 
order by 2 desc 



---------------------------------Top Ranked Songs------------------

select trackname, count (position) as no_top_position 
from spotify_worldwide_daily_song_ranking
where position =1
group by trackname
order by no_top_position desc



----------Find all wineries which produce wines by possessing aromas of plum, cherry, rose, or hazelnut-------

select distinct winery
from winemag_p1
where description like '%[^a-z]plum[^a-z]%' or 
    description like '%[^a-z]cherry[^a-z]%' or
    description like '%[^a-z]rose[^a-z]%' or
    description like '%[^a-z]hazelnut[^a-z]%'



-------------------------Top Businesses With Most Reviews-------------------

select top 5 business_id,name, sum(review_count) as total_review
from yelp_business
group by business_id,name
order by total_review desc


-----------------------Top Cool Votes----------------

select  review_text, business_name
from yelp_reviews
where cool = (select max(cool) 
from yelp_reviews)
group by review_text, business_name


--------------------Customer Revenue In March-----------------

select cust_id, sum(total_order_cost) as total_revenue 
from orders
where order_date like '2019-03%'
group by cust_id
order by total_revenue desc



------------------Employee and Manager Salaries---------------

select E.first_name as employee_name, E.salary as employee_salary
from employee E
join employee M
on E.manager_id = M.id
where E.salary > M.salary



---------------------Highest Target Under Manager----------

select  top 3 target, first_name 
from salesforce_employees
where manager_id = '13'
group by target, first_name
order by target desc



-------------------------Classify Business Type-------------------

select distinct business_name, 
case when business_name like '%restaurant%' then 'restaurant'
when business_name like '%cafe%'
or business_name like '%caf√©%' 
or business_name like '%coffee%'  then 'cafe'
when business_name like '%school%' then 'school'
else 'other'
end as  'business_type'
from sf_restaurant_health_violations


--------------------Number of violations------------

select Substring (inspection_date, 1,4), count(violation_id) as numb_of_inspections
from sf_restaurant_health_violations
Where business_name = 'Roxanne Cafe' AND inspection_date LIKE '20%'
group by inspection_date;


-------------------Top 5 States With 5 Star Businesses-----------

select top 6 state, count(stars) as n_businesses
from yelp_business
where stars = '5'
group by state
order by  n_businesses desc, state asc



===============================DATA CLEANING 1 (COVID VACCINATION)================================

-- LOOKING FOR TOTAL CASES VS TOTAL DEATH----------------------------------

 select location, date, total_cases, total_deaths, (total_deaths/total_cases)*100 AS Death_percentage
    from CovidDeathsCSV
	where location like '%Nigeria%'


---LOOKING FOR TOTAL CASES VS POPULATION-----------

 select location, date, population, total_cases, (total_cases/population)*100 AS Case_per_population
    from CovidDeathsCSV
	where location like '%Nigeria%'


	--- LOOKING FOR COUNTRY WITH HIGHEST INFECTION RATE OMPARED TO POPULATION---------

	select location, population, max(total_cases) as Max_cases, max(total_cases/population)*100 AS MAX_Case_per_population
    from CovidDeathsCSV
	Group by location, population
	order by MAX_Case_per_population desc


	--Country with the highest death count per location----------

	select location,  max(total_deaths) as highest_death_count
    from CovidDeathsCSV
	where continent is not null
	Group by location
	order by highest_death_count desc
	

---GLOBAL NUMBERS ----------------

select  date, sum(new_cases) as total_new_cases, sum(new_deaths)as total_new_deaths, sum(new_deaths) / sum(new_cases)*100 AS New_Death_percentage
    from CovidDeathsCSV
	where continent is not null
	group by date
	order by 1,2 


----LOOKING AT TOTAL POPULATION VS VACCINATION -------------------------

Select dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations, 
sum(CONVERT(int,vac.new_vaccinations)) over (partition by dea.location order by dea.date)--,dea.location)
from CovidDeathsCSV dea
join CovidVaccinations23 vac
  on dea.location = vac.location  
  and dea.date = vac.date 
  where dea.continent is not null
  order by 2,3
  
 

==============================DATA CLEANING 2(AUTOMED PAYMENT SYSTEM)==================================


 -----------------CHANGE THE DATE FORMAT-----------------
  select * from MAIN_SURVEY

  SELECT DATE_TIMECONVERTED,CONVERT(DATE,DATE_TIME)
  FROM MAIN_SURVEY
  
  UPDATE MAIN_SURVEY 
  SET DATE_TIME = CONVERT(DATE, DATE_TIME)

  ALTER TABLE MAIN_SURVEY
  ADD DATE_TIMECONVERTED DATE

  UPDATE MAIN_SURVEY 
  SET DATE_TIMECONVERTED = CONVERT(DATE, DATE_TIME)

  alter table MAIN_SURVEY
  drop column DATE_TIME


  -----SPLILTING THE LANGUGUAGE COLUMN INTO (ENGLISH,YORUBA,PIDGIN,ARABIC,CHINESE,FRENCH,IGBO,HAUSA)----------------
   SELECT 
    CASE
        WHEN NAME_OF_MULTI_LANGUAGE LIKE '%YORUBA%' THEN 'YORUBA'
        ELSE NULL
    END AS YORUBA,
    CASE
        WHEN NAME_OF_MULTI_LANGUAGE LIKE '%IGBO%' THEN 'IGBO'
        ELSE NULL
    END AS IGBO,
    CASE
        WHEN NAME_OF_MULTI_LANGUAGE LIKE '%ENGLISH%' THEN 'ENGLISH'
        ELSE NULL
    END AS ENGLISH,
    CASE
        WHEN NAME_OF_MULTI_LANGUAGE LIKE '%HAUSA%' THEN 'HAUSA'
        ELSE NULL
    END AS HAUSA,
	CASE
        WHEN NAME_OF_MULTI_LANGUAGE LIKE '%CHINESE%' THEN 'CHINESE'
        ELSE NULL
    END AS CHINESE,
	CASE
        WHEN NAME_OF_MULTI_LANGUAGE LIKE '%ARABIC%' THEN 'ARABIC'
        ELSE NULL
    END AS ARABIC,
	CASE
        WHEN NAME_OF_MULTI_LANGUAGE LIKE '%FRENCH%' THEN 'FRENCH'
        ELSE NULL
    END AS FRENCH,
	CASE
        WHEN NAME_OF_MULTI_LANGUAGE LIKE '%PIDGIN%' THEN 'PIDGIN'
        ELSE NULL
    END AS PIDGIN
FROM RIS ;


ALTER TABLE RIS
ADD PIDGIN_ VARCHAR(MAX),
    FRENCH_ VARCHAR(MAX),
    ARABIC_ VARCHAR(MAX),
	YORUBA_ VARCHAR(MAX),
	IGBO_ VARCHAR(MAX),
	HAUSA_ VARCHAR(MAX),
	ENGLISH_ VARCHAR(MAX),
    CHINESE_ VARCHAR(MAX);

	SELECT * FROM RIS 


UPDATE RIS
SET IGBO_ = 
    CASE
        WHEN NAME_OF_MULTI_LANGUAGE LIKE '%IGBO%' THEN 'IGBO'
        ELSE NULL
    END,
    HAUSA_ = 
    CASE
        WHEN NAME_OF_MULTI_LANGUAGE LIKE '%HAUSA%' THEN 'HAUSA'
        ELSE NULL
    END,
    YORUBA_ = 
    CASE
        WHEN  NAME_OF_MULTI_LANGUAGE LIKE '%YORUBA%' THEN 'YORUBA'
        ELSE NULL
    END,
    ENGLISH_ = 
    CASE
        WHEN NAME_OF_MULTI_LANGUAGE LIKE '%ENGLISH%' THEN 'ENGLISH'
        ELSE NULL
	END,
	FRENCH_ = 
    CASE
        WHEN NAME_OF_MULTI_LANGUAGE LIKE '%FRENCH%' THEN 'FRENCH'
        ELSE NULL
	END,
	ARABIC_ = 
    CASE
        WHEN NAME_OF_MULTI_LANGUAGE LIKE '%ARABIC%' THEN 'ARABIC'
        ELSE NULL
	END,
	PIDGIN_ = 
    CASE
        WHEN NAME_OF_MULTI_LANGUAGE LIKE '%PIDGIN%' THEN 'PIDGIN'
        ELSE NULL
	END,
	CHINESE_ = 
    CASE
        WHEN NAME_OF_MULTI_LANGUAGE LIKE '%CHINESE%' THEN 'CHINESE'
        ELSE NULL
    END;


   -----------------------SPILTING THE CUSTOMER REMINDER MODE COLOUMN INTO(PHONE CALLS,EMAILS,TEXT,PHYSICAL VISIT)---------------------

   SELECT 
    CASE
        WHEN CURRENT_REMINDER_MODE LIKE '%Phone calls%' THEN 'Phone calls'
        ELSE NULL
    END AS PHONE_CALLS,
    CASE
        WHEN CURRENT_REMINDER_MODE LIKE '%Text%' THEN 'Text'
        ELSE NULL
    END AS TEXTS,
    CASE
        WHEN CURRENT_REMINDER_MODE LIKE '%Emails%' THEN 'Emails'
        ELSE NULL
    END AS EMAILS,
    CASE
        WHEN CURRENT_REMINDER_MODE LIKE '%Physical visit%' THEN 'Physical visit'
        ELSE NULL
    END AS PHYSICAL_VISIT
FROM RIS ;


ALTER TABLE RIS
ADD PHONE_CALLS_ VARCHAR(MAX),
    TEXTS_ VARCHAR(MAX),
    EMAILS_ VARCHAR(MAX),
    PHYSICAL_VISIT_ VARCHAR(MAX);


UPDATE RIS
SET PHONE_CALLS = 
    CASE
        WHEN CURRENT_REMINDER_MODE LIKE '%Phone calls%' THEN 'Phone calls'
        ELSE NULL
    END,
    TEXTS = 
    CASE
        WHEN CURRENT_REMINDER_MODE LIKE '%Text%' THEN 'Text'
        ELSE NULL
    END,
    EMAILS = 
    CASE
        WHEN  CURRENT_REMINDER_MODE LIKE '%Emails%' THEN 'Emails'
        ELSE NULL
    END,
    PHYSICAL_VISIT = 
    CASE
        WHEN CURRENT_REMINDER_MODE LIKE '%Physical visit%' THEN 'Physical visit'
        ELSE NULL
    END;



























